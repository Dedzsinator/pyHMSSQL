name: Release Management

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/workflows/**'

permissions:
  contents: write
  pull-requests: write

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'skip release') }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip build wheel setuptools
          pip install -r requirements.txt

      - name: Run tests before release
        run: |
          pip install pytest pytest-cov
          pytest tests/ --tb=short

      - name: Build package
        run: python -m build

      - name: Generate release notes
        id: release-drafter
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create version tag
        id: create_tag
        run: |
          # Get the latest tag or default to v0.0.0
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          
          # Parse version components
          if [[ $LATEST_TAG =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
            MAJOR=${BASH_REMATCH[1]}
            MINOR=${BASH_REMATCH[2]}
            PATCH=${BASH_REMATCH[3]}
          else
            MAJOR=0
            MINOR=0
            PATCH=0
          fi
          
          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_TAG="v$MAJOR.$MINOR.$NEW_PATCH"
          
          echo "New tag: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
          
          # Create and push tag
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.create_tag.outputs.new_tag }}
          name: Release ${{ steps.create_tag.outputs.new_tag }}
          body: ${{ steps.release-drafter.outputs.body }}
          files: dist/*
          draft: false
          prerelease: false
          generate_release_notes: true
